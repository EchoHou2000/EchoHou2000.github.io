import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as r,f as h}from"./app-569e9fe2.js";const d={},t=h('<h1 id="tcp-ip四层模型" tabindex="-1"><a class="header-anchor" href="#tcp-ip四层模型" aria-hidden="true">#</a> TCP/IP四层模型</h1><p>TCP/IP四层模型是计算机网络实际应用的模型。<br> 从上到下分别是应用层、传输层、网络层、网络接口层。</p><h2 id="应用层" tabindex="-1"><a class="header-anchor" href="#应用层" aria-hidden="true">#</a> 应用层</h2><p>应用层是用户直接接触到的最上层，比如手机上的软件都是在应用层实现的。</p><p>应用层只需要专注为用户提供服务，比如HTTP超文本传输协议、SMTP简单邮件传输协议、FTP文件传输协议、DNS域名解析服务、Telnet远程登陆协议等。</p><h3 id="以http协议举例" tabindex="-1"><a class="header-anchor" href="#以http协议举例" aria-hidden="true">#</a> 以HTTP协议举例</h3><p>这些协议在应用层专注为用户提供协议，比如我们打开一个网页，就是HTTP的GET请求，通常会在浏览器的搜索框携带一些参数，HTTP本身是不会对url的长度进行限制，但是浏览器的本身会进行限制，并且GET请求的参数只允许有ASCII码。我们看到的网页，比如HTML就是一个常见的超文本，标签里包含了一些超链接、视频、图片，经浏览器解析后，我们看见的页面就是既包含文本，又包含视频等。</p><p>除了GET请求，HTTP还有一个POST请求，GET请求代表获取某个资源，POST请求代表添加某个资源，浏览器对Body的大小没有限制，格式也只需要前后端协商好即可。比如为某篇文章添加评论，提交后文本会写到报文Body中，以Body的形式通过TCP协议存到服务器中。</p><p>应用数据从应用层传到传输层。</p><h2 id="传输层" tabindex="-1"><a class="header-anchor" href="#传输层" aria-hidden="true">#</a> 传输层</h2><p>传输层为上层（也就是应用层）提供网络支持，该层有两个传输协议，用户数据报协议UDP、传输控制协议TCP。<br> 传输数据从应用层传到传输层之后，会加上TCP的头部传输给网络层。</p><h2 id="网络层" tabindex="-1"><a class="header-anchor" href="#网络层" aria-hidden="true">#</a> 网络层</h2><p>因为网络之间的传输过程是错综复杂的，我们分层就是为了让每一层简单、高效。网络之间实际的传输功能是由网络层实现的，传输层只负责服务好应用，作为数据传输的媒介，帮助实现通信。<br> 网络层提供了IP协议，当传输数据+TCP头部传到网络层时，会加上一个IP头部传送给下一层。</p><h2 id="网络接口层" tabindex="-1"><a class="header-anchor" href="#网络接口层" aria-hidden="true">#</a> 网络接口层</h2><p>提供了数据链路级别的功能，当传输数据+TCP头+IP头传输到网络接口层时，会在前后分别加上帧头和帧尾，封装成数据帧发送到网络上。</p>',15),i=[t];function n(c,o){return e(),r("div",null,i)}const s=a(d,[["render",n],["__file","wangluo.html.vue"]]);export{s as default};
